{"ast":null,"code":"var _jsxFileName = \"/Users/jasonroundtree/projects/blog/web/pages/post/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport client from '../../client';\nimport HeaderLayout from '../../components/HeaderLayout';\nimport styled from 'styled-components';\nimport moment from 'moment';\nconst PBody = styled.p.withConfig({\n  displayName: \"slug__PBody\",\n  componentId: \"sc-1e354jq-0\"\n})([\"margin-top:1.5em;font-size:1.15em;line-height:1.75em;\"]);\nconst PDesc = styled.p.withConfig({\n  displayName: \"slug__PDesc\",\n  componentId: \"sc-1e354jq-1\"\n})([\"font-size:1.25em;color:\", \";margin:3px 0 0;\"], ({\n  theme\n}) => theme.primaryColor);\nconst PDate = styled(PDesc).withConfig({\n  displayName: \"slug__PDate\",\n  componentId: \"sc-1e354jq-2\"\n})([\"font-size:1.15em;color:\", \";\"], ({\n  theme\n}) => theme.text);\n{\n  /* <pre>\n     <code className=\"language-js\">\n         ${section.code}\n     </code>\n  </pre> */\n}\n\nfunction Post(props) {\n  console.log('propsPost: ', props.body);\n  let postContent = '';\n  props.body.forEach(section => {\n    if (section._type === 'block') {\n      postContent += section.children[0].text;\n    } else if (section._type === 'code') {\n      postContent += section.code;\n    }\n  });\n  return __jsx(HeaderLayout, {\n    onToggleThemeClick: props.onToggleThemeClick,\n    themeString: props.themeString,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, props.title), __jsx(PDesc, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, props.description), __jsx(PDate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, moment.utc(props._createdAt).format(\"LL\")), __jsx(PBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, postContent), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, __jsx(\"code\", {\n    className: \"language-js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, `function test() { \n                                return 'hello hello!'\n                            }`))));\n}\n\nPost.getInitialProps = async function (context) {\n  // default the slug so that it doesn't return \"undefined\"\n  // console.log('context: ', context)\n  const {\n    slug = \"\"\n  } = context.query;\n  const data = await client.fetch(`\n        *[_type == \"post\" && slug.current == $slug][0]\n    `, {\n    slug\n  });\n  return data;\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/jasonroundtree/projects/blog/web/pages/post/[slug].js"],"names":["client","HeaderLayout","styled","moment","PBody","p","PDesc","theme","primaryColor","PDate","text","Post","props","console","log","body","postContent","forEach","section","_type","children","code","onToggleThemeClick","themeString","title","description","utc","_createdAt","format","getInitialProps","context","slug","query","data","fetch"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,KAAK,GAAGF,MAAM,CAACG,CAAV;AAAA;AAAA;AAAA,6DAAX;AAMA,MAAMC,KAAK,GAAGJ,MAAM,CAACG,CAAV;AAAA;AAAA;AAAA,oDAGE,CAAC;AAAEE,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAHvB,CAAX;AAMA,MAAMC,KAAK,GAAGP,MAAM,CAACI,KAAD,CAAT;AAAA;AAAA;AAAA,qCAGE,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,IAHvB,CAAX;AAKA;AAAC;;;;;AAIS;;AAEV,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAAK,CAACG,IAAjC;AACA,MAAIC,WAAW,GAAG,EAAlB;AACAJ,EAAAA,KAAK,CAACG,IAAN,CAAWE,OAAX,CAAmBC,OAAO,IAAI;AACtB,QAAIA,OAAO,CAACC,KAAR,KAAkB,OAAtB,EAA+B;AAC3BH,MAAAA,WAAW,IAAIE,OAAO,CAACE,QAAR,CAAiB,CAAjB,EAAoBV,IAAnC;AACH,KAFD,MAEO,IAAIQ,OAAO,CAACC,KAAR,KAAkB,MAAtB,EAA8B;AACjCH,MAAAA,WAAW,IAAIE,OAAO,CAACG,IAAvB;AACH;AACR,GAND;AAQA,SACI,MAAC,YAAD;AACI,IAAA,kBAAkB,EAAET,KAAK,CAACU,kBAD9B;AAEI,IAAA,WAAW,EAAEV,KAAK,CAACW,WAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,KAAK,CAACY,KAAX,CADJ,EAEI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQZ,KAAK,CAACa,WAAd,CAFJ,EAGI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQtB,MAAM,CAACuB,GAAP,CAAWd,KAAK,CAACe,UAAjB,EAA6BC,MAA7B,CAAoC,IAApC,CAAR,CAHJ,EAKI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,WADL,CALJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAES;;8BAFT,CADJ,CARJ,CAJJ,CADJ;AAyBH;;AAEDL,IAAI,CAACkB,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC3C;AACA;AACA,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAgBD,OAAO,CAACE,KAA9B;AACA,QAAMC,IAAI,GAAG,MAAMjC,MAAM,CAACkC,KAAP,CAAc;;KAAd,EAEhB;AAAEH,IAAAA;AAAF,GAFgB,CAAnB;AAGA,SAAOE,IAAP;AACH,CARD;;AAUA,eAAetB,IAAf","sourcesContent":["import client from '../../client'\nimport HeaderLayout from '../../components/HeaderLayout'\nimport styled from 'styled-components'\nimport moment from 'moment'\n\nconst PBody = styled.p`\n    margin-top: 1.5em;\n    font-size: 1.15em;\n    /* font-weight: 300; */\n    line-height: 1.75em;\n`\nconst PDesc = styled.p`\n    font-size: 1.25em;\n    /* font-family: 'Lustria', serif; */\n    color: ${({ theme }) => theme.primaryColor};\n    margin: 3px 0 0;\n`\nconst PDate = styled(PDesc)`\n    font-size: 1.15em;\n    /* font-weight: normal; */\n    color: ${({ theme }) => theme.text};\n`\n{/* <pre>\n    <code className=\"language-js\">\n        ${section.code}\n    </code>\n</pre> */}\n\nfunction Post(props) {\n    console.log('propsPost: ', props.body)\n    let postContent = ''\n    props.body.forEach(section => {\n            if (section._type === 'block') {\n                postContent += section.children[0].text\n            } else if (section._type === 'code') {\n                postContent += section.code\n            }\n    })\n\n    return (\n        <HeaderLayout \n            onToggleThemeClick={props.onToggleThemeClick}\n            themeString={props.themeString}\n        >\n            <article>\n                <h2>{props.title}</h2>\n                <PDesc>{props.description}</PDesc>\n                <PDate>{moment.utc(props._createdAt).format(\"LL\")}</PDate>\n                {/* <PBody>{props.body.map(section => section.children)}</PBody> */}\n                <PBody>\n                    {postContent}\n                </PBody>\n                <pre>\n                    <code className=\"language-js\">\n                        {\n                            `function test() { \n                                return 'hello hello!'\n                            }`\n                        }\n                    </code>\n                </pre>\n            </article>\n        </HeaderLayout>\n    )\n}\n\nPost.getInitialProps = async function(context) {\n    // default the slug so that it doesn't return \"undefined\"\n    // console.log('context: ', context)\n    const { slug = \"\" } = context.query\n    const data = await client.fetch(`\n        *[_type == \"post\" && slug.current == $slug][0]\n    `, { slug })\n    return data\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}