{"ast":null,"code":"var _jsxFileName = \"/Users/jasonroundtree/projects/blog/web/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useState, useEffect } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyles } from '../components/GlobalStyles';\nimport themes from '../colorsAndThemes';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: userThemeStr,\n    1: setUserThemeStr\n  } = useState('light');\n  const {\n    0: userThemeObj,\n    1: setUserThemeObj\n  } = useState(themes[userThemeStr]);\n  useEffect(() => {\n    setUserThemeObj(themes[userThemeStr]);\n  }, [userThemeStr]);\n\n  function handleThemeToggle() {\n    console.log('event ran');\n    setUserThemeStr(userThemeStr === 'dark' ? 'light' : 'dark');\n  }\n\n  return __jsx(ThemeProvider, {\n    theme: userThemeObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    onToggleThemeClick: handleThemeToggle,\n    themeString: userThemeStr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/jasonroundtree/projects/blog/web/pages/_app.js"],"names":["useState","useEffect","ThemeProvider","GlobalStyles","themes","MyApp","Component","pageProps","userThemeStr","setUserThemeStr","userThemeObj","setUserThemeObj","handleThemeToggle","console","log"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACrC,QAAM;AAAA,OAAEC,YAAF;AAAA,OAAgBC;AAAhB,MAAoCT,QAAQ,CAAC,OAAD,CAAlD;AACA,QAAM;AAAA,OAAEU,YAAF;AAAA,OAAgBC;AAAhB,MAAoCX,QAAQ,CAACI,MAAM,CAACI,YAAD,CAAP,CAAlD;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,eAAe,CAACP,MAAM,CAACI,YAAD,CAAP,CAAf;AACH,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;;AAIA,WAASI,iBAAT,GAA6B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAL,IAAAA,eAAe,CACXD,YAAY,KAAK,MAAjB,GAA0B,OAA1B,GAAoC,MADzB,CAAf;AAGH;;AAED,SACI,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEE,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,SAAD,eACQH,SADR;AAEI,IAAA,kBAAkB,EAAEK,iBAFxB;AAGI,IAAA,WAAW,EAAEJ,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,CADJ;AAUH;;AAED,eAAeH,KAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { GlobalStyles } from '../components/GlobalStyles'\nimport themes from '../colorsAndThemes'\n\nfunction MyApp({ Component, pageProps }) {\n    const [ userThemeStr, setUserThemeStr ] = useState('light')\n    const [ userThemeObj, setUserThemeObj ] = useState(themes[userThemeStr])\n\n    useEffect(() => {\n        setUserThemeObj(themes[userThemeStr])\n    }, [userThemeStr])\n    \n    function handleThemeToggle() {\n        console.log('event ran')\n        setUserThemeStr(\n            userThemeStr === 'dark' ? 'light' : 'dark'\n        )\n    }\n\n    return (\n        <ThemeProvider theme={userThemeObj}>\n            <GlobalStyles />\n            <Component \n                {...pageProps} \n                onToggleThemeClick={handleThemeToggle}\n                themeString={userThemeStr}\n            />\n        </ThemeProvider>\n    )\n}\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}