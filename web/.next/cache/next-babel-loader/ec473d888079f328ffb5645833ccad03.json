{"ast":null,"code":"var _jsxFileName = \"/Users/jasonroundtree/projects/blog/web/pages/post/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport client from '../client';\n\nconst Post = props => {\n  const router = useRouter();\n  return __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, props.slug.current));\n};\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"\"\n  } = context.query;\n  return await client.fetch(`\n        *[_type == \"post\" && slug.current == $slug][0]\n    `, {\n    slug\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/jasonroundtree/projects/blog/web/pages/post/[slug].js"],"names":["useRouter","client","Post","props","router","slug","current","getInitialProps","context","query","fetch"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACpB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,KAAK,CAACE,IAAN,CAAWC,OAAhB,CADJ,CADJ;AAKH,CAPD;;AASAJ,IAAI,CAACK,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC3C;AACA,QAAM;AAAEH,IAAAA,IAAI,GAAG;AAAT,MAAgBG,OAAO,CAACC,KAA9B;AACA,SAAO,MAAMR,MAAM,CAACS,KAAP,CAAc;;KAAd,EAEV;AAAEL,IAAAA;AAAF,GAFU,CAAb;AAGD,CANH;;AAQA,eAAeH,IAAf","sourcesContent":["import { useRouter } from 'next/router'\nimport client from '../client'\n\nconst Post = (props) => {\n    const router = useRouter()\n    return (\n        <article>\n            <h1>{props.slug.current}</h1>\n        </article>\n    )\n}\n\nPost.getInitialProps = async function(context) {\n    // It's important to default the slug so that it doesn't return \"undefined\"\n    const { slug = \"\" } = context.query\n    return await client.fetch(`\n        *[_type == \"post\" && slug.current == $slug][0]\n    `, { slug })\n  }\n\nexport default Post"]},"metadata":{},"sourceType":"module"}