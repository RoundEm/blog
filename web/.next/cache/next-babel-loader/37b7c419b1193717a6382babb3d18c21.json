{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/jasonroundtree/projects/blog/web/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport client from '../client';\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport HeaderLayout from '../components/HeaderLayout';\nimport KeywordTags from '../components/KeywordTags';\nimport sortObjProperties from '../utils/sortObjProperties.js';\nvar ListItem = styled.li.withConfig({\n  displayName: \"pages__ListItem\",\n  componentId: \"nuslkc-0\"\n})([\"margin:15px 0 0 15px;padding:10px 15px;font-size:1.75em;border:1px solid var(--primary-darker);\"]);\nvar ListItemLink = styled.a.withConfig({\n  displayName: \"pages__ListItemLink\",\n  componentId: \"nuslkc-1\"\n})([\"font-family:'Fjalla One',sans-serif;font-weight:400;&:hover{cursor:pointer;color:\", \";}\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.primaryColor;\n});\nvar TagListItem = styled.li.withConfig({\n  displayName: \"pages__TagListItem\",\n  componentId: \"nuslkc-2\"\n})([\"display:inline-block;margin-right:5px;padding:3px 5px;font-family:'Nanum Gothic Coding',monospace;font-size:.5em;color:\", \";background:\", \";\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.secondaryColor;\n}, function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.primaryColor;\n});\nvar DescP = styled.p.withConfig({\n  displayName: \"pages__DescP\",\n  componentId: \"nuslkc-3\"\n})([\"font-size:.6em;color:\", \";\"], function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.primaryColor;\n});\nvar DateP = styled.p.withConfig({\n  displayName: \"pages__DateP\",\n  componentId: \"nuslkc-4\"\n})([\"font-size:.5em;\"]); // removes duplicate post objects by converting each post into a JSON string so that they can be compared and filtered using `new Set`, then parsing the final unique array of posts back to a normal array of objects\n\nfunction uniquePostsArray(posts) {\n  return _toConsumableArray(new Set(posts.map(function (postObj) {\n    return JSON.stringify(postObj);\n  }))).map(function (postStr) {\n    return JSON.parse(postStr);\n  });\n}\n\nfunction getTagCountsData(tags) {\n  return Promise.all(tags.map(function _callee(tag) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(client.fetch(\"\\n                *[ _id == $tagID ]{\\n                    name,\\n                    _id,\\n                    \\\"count\\\": count(\\n                        *[ \\n                            _type == \\\"post\\\" && \\n                            $tagID in tags[]._ref \\n                        ]\\n                    )\\n                }[0]\\n            \", {\n              tagID: tag._id\n            }));\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }));\n}\n\nfunction Index(_ref5) {\n  var _this = this;\n\n  var posts = _ref5.posts,\n      tags = _ref5.tags,\n      themeString = _ref5.themeString,\n      onToggleThemeClick = _ref5.onToggleThemeClick;\n\n  // console.log('posts: ', posts)\n  // console.log('tags: ', tags)\n  var _useState = useState(posts),\n      allPosts = _useState[0];\n\n  var _useState2 = useState([]),\n      filteredPosts = _useState2[0],\n      setFilteredPosts = _useState2[1];\n\n  var _useState3 = useState([]),\n      tagCounts = _useState3[0],\n      setTagCounts = _useState3[1];\n\n  var _useState4 = useState([]),\n      filteredTags = _useState4[0],\n      setFilteredTags = _useState4[1]; // console.log('tagCounts: ', tagCounts)\n\n\n  useEffect(function () {\n    getTagCountsData(tags).then(function (tagCounts) {\n      setTagCounts(tagCounts);\n    })[\"catch\"](function (err) {\n      return console.log('error getting tag counts: ', err);\n    });\n  }, []);\n  useEffect(function () {\n    if (filteredTags.length > 0) {\n      var _filteredPosts = [];\n      allPosts.forEach(function (post) {\n        post.tags.forEach(function (tag) {\n          if (filteredTags.includes(tag._id)) {\n            _filteredPosts.push(post);\n          }\n        });\n      });\n      setFilteredPosts(uniquePostsArray(_filteredPosts));\n    } else {\n      setFilteredPosts([]);\n    }\n  }, [filteredTags]);\n\n  function handleTagFilter(e) {\n    var selectedTagID = e.currentTarget.id;\n\n    if (selectedTagID === 'clearFilter') {\n      setFilteredTags([]);\n    } else if (!filteredTags.includes(selectedTagID)) {\n      setFilteredTags(function (state) {\n        return [].concat(_toConsumableArray(state), [selectedTagID]);\n      });\n    } else {\n      setFilteredTags(filteredTags.filter(function (tag) {\n        return tag !== selectedTagID;\n      }));\n    }\n  }\n\n  var postsToRender = filteredPosts.length > 0 ? filteredPosts : allPosts;\n  return (// TODO: is there a better way to render HeaderLayout instead of using in here and in [slug] (and any other separate pages that I add? Checkout next.js _document)\n    __jsx(HeaderLayout, {\n      onToggleThemeClick: onToggleThemeClick,\n      themeString: themeString,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"Filter by Tags:\"), __jsx(KeywordTags, {\n      tags: tagCounts,\n      handleTagFilter: handleTagFilter,\n      filteredTags: filteredTags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, \"Posts:\"), postsToRender.map(function (_ref6) {\n      var _id = _ref6._id,\n          _createdAt = _ref6._createdAt,\n          description = _ref6.description,\n          slug = _ref6.slug,\n          title = _ref6.title,\n          tags = _ref6.tags;\n      return __jsx(ListItem, {\n        key: _id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, __jsx(Link, {\n        href: \"/posts/[slug]\",\n        as: \"/posts/\".concat(slug.current),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }\n      }, __jsx(ListItemLink, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }\n      }, title)), __jsx(DescP, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }\n      }, description), __jsx(DateP, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }\n      }, manual_pub_date ? moment.utc(manual_pub_date).format(\"LL\") : moment.utc(_createdAt).format(\"LL\")), __jsx(\"ul\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }\n      }, sortObjProperties(tags).map(function (tag) {\n        return;\n\n        __jsx(TagListItem, {\n          key: tag._id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 37\n          }\n        }, tag.name);\n      })));\n    }))\n  );\n}\n\nexport var __N_SSG = true;\nexport default Index;","map":{"version":3,"sources":["/Users/jasonroundtree/projects/blog/web/pages/index.js"],"names":["client","Link","useState","useEffect","styled","moment","HeaderLayout","KeywordTags","sortObjProperties","ListItem","li","ListItemLink","a","theme","primaryColor","TagListItem","secondaryColor","DescP","p","DateP","uniquePostsArray","posts","Set","map","postObj","JSON","stringify","postStr","parse","getTagCountsData","tags","Promise","all","tag","fetch","tagID","_id","Index","themeString","onToggleThemeClick","allPosts","filteredPosts","setFilteredPosts","tagCounts","setTagCounts","filteredTags","setFilteredTags","then","err","console","log","length","_filteredPosts","forEach","post","includes","push","handleTagFilter","e","selectedTagID","currentTarget","id","state","filter","postsToRender","_createdAt","description","slug","title","current","manual_pub_date","utc","format","name"],"mappings":"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","sourcesContent":["import client from '../client'\nimport Link from 'next/link'\nimport { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport moment from 'moment'\nimport HeaderLayout from '../components/HeaderLayout'\nimport KeywordTags from '../components/KeywordTags'\nimport sortObjProperties from '../utils/sortObjProperties.js'\n\nconst ListItem = styled.li`\n    margin: 15px 0 0 15px;\n    padding: 10px 15px;\n    font-size: 1.75em;\n    border: 1px solid var(--primary-darker);\n`\nconst ListItemLink = styled.a`\n    font-family: 'Fjalla One', sans-serif;\n    font-weight: 400;\n    &:hover {\n        cursor: pointer;\n        color: ${({ theme }) => theme.primaryColor};\n    }\n`\nconst TagListItem = styled.li`\n    display: inline-block;\n    margin-right: 5px;\n    padding: 3px 5px;\n    font-family: 'Nanum Gothic Coding', monospace;\n    font-size: .5em;\n    color: ${({ theme }) => theme.secondaryColor};\n    background: ${({ theme }) => theme.primaryColor};\n`\nconst DescP = styled.p`\n    font-size: .6em;\n    color: ${({ theme }) => theme.primaryColor};\n`\nconst DateP = styled.p`\n    font-size: .5em;\n`\n\n// removes duplicate post objects by converting each post into a JSON string so that they can be compared and filtered using `new Set`, then parsing the final unique array of posts back to a normal array of objects\nfunction uniquePostsArray(posts) {\n    return [\n        ...new Set(posts.map(postObj => {\n            return JSON.stringify(postObj)\n        }))\n    ].map(postStr => {\n       return JSON.parse(postStr)\n    })\n}\n\nfunction getTagCountsData(tags) {\n    return Promise.all(\n        tags.map(async tag => {\n            return await client.fetch(`\n                *[ _id == $tagID ]{\n                    name,\n                    _id,\n                    \"count\": count(\n                        *[ \n                            _type == \"post\" && \n                            $tagID in tags[]._ref \n                        ]\n                    )\n                }[0]\n            `, { tagID: tag._id })\n        })\n    )\n}\n\nfunction Index({ \n    posts, \n    tags, \n    themeString,\n    onToggleThemeClick\n}) {\n    // console.log('posts: ', posts)\n    // console.log('tags: ', tags)\n    const [ allPosts ] = useState(posts)\n    const [ filteredPosts, setFilteredPosts ] = useState([])\n    const [ tagCounts, setTagCounts ] = useState([])\n    const [ filteredTags, setFilteredTags ] = useState([])\n    // console.log('tagCounts: ', tagCounts)\n\n    useEffect(() => {\n        getTagCountsData(tags)\n            .then(tagCounts => {\n                setTagCounts(tagCounts)\n            })\n            .catch(err => console.log('error getting tag counts: ', err))\n    }, [])\n\n    useEffect(() => {\n        if (filteredTags.length > 0) {\n            const _filteredPosts = []\n            allPosts.forEach(post => {\n                post.tags.forEach(tag => {\n                    if (filteredTags.includes(tag._id)) {\n                        _filteredPosts.push(post)\n                    }\n                })\n            })  \n            setFilteredPosts(\n                uniquePostsArray(_filteredPosts)\n            )\n        } else {\n            setFilteredPosts([])\n        }\n    }, [filteredTags])\n\n    function handleTagFilter(e) {\n        const selectedTagID = e.currentTarget.id\n        if (selectedTagID === 'clearFilter') {\n            setFilteredTags([])\n        } else if (!filteredTags.includes(selectedTagID)) {\n            setFilteredTags(state => [...state, selectedTagID])\n        } else {\n            setFilteredTags(filteredTags.filter(tag => {\n               return tag !== selectedTagID\n            }))\n        }\n    }\n\n    const postsToRender = filteredPosts.length > 0 \n        ? filteredPosts \n        : allPosts\n\n    return (\n        // TODO: is there a better way to render HeaderLayout instead of using in here and in [slug] (and any other separate pages that I add? Checkout next.js _document)\n        <HeaderLayout \n            onToggleThemeClick={onToggleThemeClick} \n            themeString={themeString}\n        >\n            \n            <h2>Filter by Tags:</h2>\n            <KeywordTags \n                tags={tagCounts}\n                handleTagFilter={handleTagFilter}\n                filteredTags={filteredTags}\n            />\n\n            <h2>Posts:</h2>\n            {postsToRender.map(\n                ({ \n                    _id, \n                    _createdAt,\n                    description, \n                    slug,\n                    title, \n                    tags\n                }) => (\n                    <ListItem key={_id}>\n                        <Link\n                            href='/posts/[slug]'\n                            as={`/posts/${slug.current}`}\n                        >\n                            <ListItemLink>{title}</ListItemLink>\n                        </Link>\n                        <DescP>{description}</DescP>\n                        <DateP>\n                            {manual_pub_date \n                                ? moment.utc(manual_pub_date).format(\"LL\")\n                                : moment.utc(_createdAt).format(\"LL\")\n                            }\n                        </DateP>\n                        <ul>\n                            {sortObjProperties(tags).map(tag => {\n                                return \n                                    <TagListItem key={tag._id}>\n                                        {tag.name}\n                                    </TagListItem>\n                                \n                            })}\n                        </ul>\n                    </ListItem>\n                )\n            )}\n        </HeaderLayout>\n    )\n}\n\nexport async function getStaticProps() {\n    const posts = await client.fetch(`\n        *[ _type == \"post\" ]{\n            ..., \n            tags[]->{_id, name}\n        }\n    `)\n\n    const tags = await client.fetch(`\n        *[ _type == \"tag\" ] {\n            _id, name\n        }\n    `)\n\n    return { \n        props: { \n            posts,\n            tags\n        } \n    }\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}