{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/jasonroundtree/projects/blog/web/pages/post/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport client from '../../client';\nimport HeaderLayout from '../../components/HeaderLayout';\nimport styled from 'styled-components';\nimport moment from 'moment';\nvar PBody = styled.p.withConfig({\n  displayName: \"slug__PBody\",\n  componentId: \"sc-1e354jq-0\"\n})([\"margin-top:1.5em;font-size:1.15em;line-height:1.75em;\"]);\nvar PDesc = styled.p.withConfig({\n  displayName: \"slug__PDesc\",\n  componentId: \"sc-1e354jq-1\"\n})([\"font-size:1.25em;color:\", \";margin:3px 0 0;\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.primaryColor;\n});\nvar PDate = styled(PDesc).withConfig({\n  displayName: \"slug__PDate\",\n  componentId: \"sc-1e354jq-2\"\n})([\"font-size:1.15em;color:\", \";\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.text;\n});\n\nfunction Post(props) {\n  console.log('propsPost: ', props.body);\n  var postContent = ''; // props.body.map(section => {\n  //     if (section._type === 'block') {\n  // postContent += children[0]\n  // } else if (section._type === 'code')\n  // })\n\n  return __jsx(HeaderLayout, {\n    onToggleThemeClick: props.onToggleThemeClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, props.title), __jsx(PDesc, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, props.description), __jsx(PDate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, moment.utc(props._createdAt).format(\"LL\")), __jsx(PBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })));\n}\n\nPost.getInitialProps = function _callee(context) {\n  var _context$query$slug, slug, data;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // default the slug so that it doesn't return \"undefined\"\n          // console.log('context: ', context)\n          _context$query$slug = context.query.slug, slug = _context$query$slug === void 0 ? \"\" : _context$query$slug;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(client.fetch(\"\\n        *[_type == \\\"post\\\" && slug.current == $slug][0]\\n    \", {\n            slug: slug\n          }));\n\n        case 3:\n          data = _context.sent;\n          return _context.abrupt(\"return\", data);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/jasonroundtree/projects/blog/web/pages/post/[slug].js"],"names":["client","HeaderLayout","styled","moment","PBody","p","PDesc","theme","primaryColor","PDate","text","Post","props","console","log","body","postContent","onToggleThemeClick","title","description","utc","_createdAt","format","getInitialProps","context","query","slug","fetch","data"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,IAAMC,KAAK,GAAGF,MAAM,CAACG,CAAV;AAAA;AAAA;AAAA,6DAAX;AAMA,IAAMC,KAAK,GAAGJ,MAAM,CAACG,CAAV;AAAA;AAAA;AAAA,oDAGE;AAAA,MAAGE,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,YAArB;AAAA,CAHF,CAAX;AAMA,IAAMC,KAAK,GAAGP,MAAM,CAACI,KAAD,CAAT;AAAA;AAAA;AAAA,qCAGE;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACG,IAArB;AAAA,CAHF,CAAX;;AAMA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAAK,CAACG,IAAjC;AACA,MAAIC,WAAW,GAAG,EAAlB,CAFiB,CAGjB;AACA;AACI;AACJ;AACA;;AAEA,SACI,MAAC,YAAD;AAAc,IAAA,kBAAkB,EAAEJ,KAAK,CAACK,kBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,KAAK,CAACM,KAAX,CADJ,EAEI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQN,KAAK,CAACO,WAAd,CAFJ,EAGI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQhB,MAAM,CAACiB,GAAP,CAAWR,KAAK,CAACS,UAAjB,EAA6BC,MAA7B,CAAoC,IAApC,CAAR,CAHJ,EAKI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CADJ;AAeH;;AAEDX,IAAI,CAACY,eAAL,GAAuB,iBAAeC,OAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnB;AACA;AAFmB,gCAGGA,OAAO,CAACC,KAHX,CAGXC,IAHW,EAGXA,IAHW,oCAGJ,EAHI;AAAA;AAAA,2CAIA1B,MAAM,CAAC2B,KAAP,qEAEhB;AAAED,YAAAA,IAAI,EAAJA;AAAF,WAFgB,CAJA;;AAAA;AAIbE,UAAAA,IAJa;AAAA,2CAOZA,IAPY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAUA,eAAejB,IAAf","sourcesContent":["import client from '../../client'\nimport HeaderLayout from '../../components/HeaderLayout'\nimport styled from 'styled-components'\nimport moment from 'moment'\n\nconst PBody = styled.p`\n    margin-top: 1.5em;\n    font-size: 1.15em;\n    /* font-weight: 300; */\n    line-height: 1.75em;\n`\nconst PDesc = styled.p`\n    font-size: 1.25em;\n    /* font-family: 'Lustria', serif; */\n    color: ${({ theme }) => theme.primaryColor};\n    margin: 3px 0 0;\n`\nconst PDate = styled(PDesc)`\n    font-size: 1.15em;\n    /* font-weight: normal; */\n    color: ${({ theme }) => theme.text};\n`\n\nfunction Post(props) {\n    console.log('propsPost: ', props.body)\n    let postContent = ''\n    // props.body.map(section => {\n    //     if (section._type === 'block') {\n        // postContent += children[0]\n    // } else if (section._type === 'code')\n    // })\n\n    return (\n        <HeaderLayout onToggleThemeClick={props.onToggleThemeClick}>\n            <article>\n                <h2>{props.title}</h2>\n                <PDesc>{props.description}</PDesc>\n                <PDate>{moment.utc(props._createdAt).format(\"LL\")}</PDate>\n                {/* <PBody>{props.body.map(section => section.children)}</PBody> */}\n                <PBody>\n                    {/* {\n\n                    } */}\n                </PBody>\n            </article>\n        </HeaderLayout>\n    )\n}\n\nPost.getInitialProps = async function(context) {\n    // default the slug so that it doesn't return \"undefined\"\n    // console.log('context: ', context)\n    const { slug = \"\" } = context.query\n    const data = await client.fetch(`\n        *[_type == \"post\" && slug.current == $slug][0]\n    `, { slug })\n    return data\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}