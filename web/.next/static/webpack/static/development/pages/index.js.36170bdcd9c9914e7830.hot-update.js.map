{"version":3,"file":"static/webpack/static/development/pages/index.js.36170bdcd9c9914e7830.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import client from '../client'\nimport Link from 'next/link'\nimport HeaderLayout from '../components/HeaderLayout'\nimport KeywordTags from '../components/KeywordTags'\nimport styled from 'styled-components'\nimport moment from 'moment'\nimport '../globalStyles.css'\n\nconst ListItem = styled.li`\n    margin: 15px 0 0 15px;;\n    font-size: 1.75em;\n`\nconst DateP = styled.p`\n    font-size: .85em;\n`\n\nconst Index = (props) => {\n    console.log('props: ', props)\n    // const propsArray = Object.values(props)\n    const { posts } = props\n    // console.log('posts: ', posts)\n    return null\n    // last item in props is next.js url metadata\n    // const posts = propsArray.slice(\n    //     0, propsArray.length - 1\n    // )\n    // TODO: there's gotta be a more straightforward way to get these counts, right? Maybe just do it from query?\n    // const tags = posts.reduce((tagCount, post) => {\n    //     // TODO: is this check necessary or will there always be tags even when empty array?\n    //    const postTags = post.tags && post.tags\n    //     // console.log('postTags: ', postTags)\n    //     postTags.forEach(tag => {\n    //         if (!tagCount[tag.name]) {\n    //             tagCount[tag.name] = 1\n    //         } else {\n    //             tagCount[tag.name] = tagCount[tag.name] + 1\n    //         }\n    //     })\n    //     return tagCount\n    // }, {})\n\n    // return (\n    //     <HeaderLayout>\n    //         <h2>Tags:</h2>\n    //         <KeywordTags \n    //             tags={tags}\n    //         />\n\n    //         <h2>Posts:</h2>\n    //         {posts.map(\n    //             ({ \n    //                 _id, \n    //                 _createdAt,\n    //                 slug, \n    //                 title, \n    //                 description, \n    //             }) => (\n    //                 <ListItem key={_id}>\n    //                     <Link\n    //                         href='/post/[slug]'\n    //                         as={`/post/${slug.current}`}\n    //                     >\n    //                         <a>{title}</a>\n    //                     </Link>\n    //                     <p>{description}</p>\n    //                     <DateP>\n    //                         {moment.utc(_createdAt).format(\"LL\")}\n    //                     </DateP>\n    //                 </ListItem>\n    //             )\n    //         )}\n    //     </HeaderLayout>\n    // )\n}\n\nexport async function getStaticProps() {\n    const posts = await client.fetch(`\n        *[ _type == \"post\" ]{\n            ..., \n            tags[]->{_id, name}\n        }\n    `)\n\n    return {\n        props: { posts }\n    }\n}\n\nexport default Index"],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAcA;;;;A","sourceRoot":""}