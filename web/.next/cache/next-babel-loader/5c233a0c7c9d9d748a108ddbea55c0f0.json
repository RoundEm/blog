{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { useEffect, useState } from 'react'\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport HeaderLayout from '../../components/HeaderLayout';\nimport themes, { colors } from '../../colorsAndThemes';\nvar MainContent = styled.div.withConfig({\n  displayName: \"slug__MainContent\",\n  componentId: \"tg0oky-0\"\n})([\"margin-top:1.5em;font-size:1.15em;line-height:1.75em;\"]);\nvar PDesc = styled.p.withConfig({\n  displayName: \"slug__PDesc\",\n  componentId: \"tg0oky-1\"\n})([\"font-size:1.1em;color:\", \";margin:3px 0 0;\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.primaryColor;\n});\nvar PDate = styled(PDesc).withConfig({\n  displayName: \"slug__PDate\",\n  componentId: \"tg0oky-2\"\n})([\"font-size:1em;color:\", \";\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.text;\n});\nvar PBlock = styled.p.withConfig({\n  displayName: \"slug__PBlock\",\n  componentId: \"tg0oky-3\"\n})([\"margin-bottom:1em;\"]);\nvar AsideBlock = styled.div.withConfig({\n  displayName: \"slug__AsideBlock\",\n  componentId: \"tg0oky-4\"\n})([\"margin-bottom:1em;padding:1em 2em;background-color:\", \";font-size:.9em;border-left:1px solid rgba(114,143,203,.5);\"], function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.asideBackground;\n});\nvar Pre = styled.pre.withConfig({\n  displayName: \"slug__Pre\",\n  componentId: \"tg0oky-5\"\n})([\"font-family:'Nanum Gothic Coding',monospace;font-size:.9em;overflow:auto;text-align:left;margin:1em 0;padding:0.5em;& .token-line{line-height:1.4em;height:1.3em;}\"]);\nvar LineNo = styled.span.withConfig({\n  displayName: \"slug__LineNo\",\n  componentId: \"tg0oky-6\"\n})([\"display:inline-block;width:2em;user-select:none;opacity:0.3;\"]);\nvar ExternalLink = styled.a.withConfig({\n  displayName: \"slug__ExternalLink\",\n  componentId: \"tg0oky-7\"\n})([\"text-decoration:underline;color:\", \";\"], function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.articleLinks;\n});\nvar Button = styled.button.withConfig({\n  displayName: \"slug__Button\",\n  componentId: \"tg0oky-8\"\n})([\"font-size:.8em;font-weight:bold;display:block;margin:auto;\"]);\n\nfunction Post(props) {\n  console.log('propsPost: ', props); // useEffect(() => {\n  //     window.addEventListener('scroll', handleScroll)\n  //     return () => window.removeEventListener('scroll', handleScroll)\n  // }, [])\n  // function handleScroll(e) {\n  //     console.log('handleScroll e: ', e.target.scrollingElement.scrollTop)\n  // }\n\n  function handleScrollToTop() {\n    window.scroll({\n      top: 0,\n      behavior: 'smooth'\n    });\n  }\n\n  var postContent = []; // TODO: change these to use functional loops?:\n\n  function paragraphBlock(section) {\n    // console.log('paraSection: ', section)\n    var blockContent = [];\n\n    for (var i = 0; i < section.children.length; i++) {\n      if (section.children[i].marks.length > 0) {\n        for (var j = 0; j < section.markDefs.length; j++) {\n          if (section.markDefs[j]._key === section.children[i].marks[0]) {\n            blockContent.push(__jsx(ExternalLink, {\n              target: \"_blank\",\n              href: section.markDefs[j].href,\n              key: section.markDefs[j]._key\n            }, section.children[i].text));\n          }\n        }\n      } else {\n        blockContent.push(section.children[i].text);\n      }\n    } // console.log('blockContent: ', blockContent)\n\n\n    return __jsx(PBlock, {\n      key: section._key\n    }, blockContent);\n  }\n\n  function asideStringNewlines(content, _key) {\n    var contentArray = content.split('\\n'); // console.log('contentArray: ', contentArray)\n\n    var renderedLines = [];\n\n    for (var i = 0; i < contentArray.length; i++) {\n      renderedLines.push(__jsx(\"div\", {\n        key: i\n      }, contentArray[i]));\n    }\n\n    return __jsx(AsideBlock, {\n      key: _key\n    }, renderedLines);\n  }\n\n  function prismafyCodeBlock(content, _key) {\n    return __jsx(Highlight, _extends({}, defaultProps, {\n      theme: props.themeString === 'light' ? themes.light.syntax : themes.dark.syntax,\n      code: content,\n      language: \"jsx\",\n      key: _key\n    }), function (_ref5) {\n      var className = _ref5.className,\n          style = _ref5.style,\n          tokens = _ref5.tokens,\n          getLineProps = _ref5.getLineProps,\n          getTokenProps = _ref5.getTokenProps;\n      return __jsx(Pre, {\n        className: className,\n        style: style\n      }, tokens.map(function (line, i) {\n        return __jsx(\"div\", getLineProps({\n          line: line,\n          key: i\n        }), __jsx(LineNo, null, i + 1), line.map(function (token, key) {\n          return __jsx(\"span\", getTokenProps({\n            token: token,\n            key: key\n          }));\n        }));\n      }));\n    });\n  }\n\n  props.body && props.body.forEach(function (section) {\n    switch (section._type) {\n      case 'block':\n        postContent.push(paragraphBlock(section));\n        break;\n\n      case 'code':\n        postContent.push(prismafyCodeBlock(section.code, section._key));\n        break;\n\n      case 'post_aside':\n        postContent.push(asideStringNewlines(section.str_content_newline, section._key));\n        break;\n      // default:\n      //     console.log('default case')\n    } // console.log('postContent: ', postContent)\n\n  });\n  return __jsx(HeaderLayout, {\n    onToggleThemeClick: props.onToggleThemeClick,\n    themeString: props.themeString\n  }, __jsx(\"article\", null, __jsx(\"h2\", null, props.title), __jsx(PDesc, null, props.description), __jsx(PDate, null, props.manual_pub_date ? moment.utc(props.manual_pub_date).format(\"LL\") : moment.utc(props._createdAt).format(\"LL\")), __jsx(MainContent, null, postContent.map(function (content) {\n    return content;\n  }))), __jsx(Button, {\n    onClick: handleScrollToTop\n  }, \"Back to top\"), __jsx(\"br\", null), __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, __jsx(Button, null, \"Blog Home\"))));\n}\n\n// Post.getInitialProps = async function(context) {\n//     // default the slug so that it doesn't return \"undefined\"\n//     // console.log('context: ', context)\n//     const { slug = \"\" } = context.query\n//     const data = await client.fetch(`\n//         *[_type == \"post\" && slug.current == $slug][0]\n//     `, { slug })\n//     return data\n// }\nexport var __N_SSG = true;\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}