{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/jasonroundtree/projects/blog/web/pages/post/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport client from '../../client';\nimport HeaderLayout from '../../components/HeaderLayout';\nimport styled from 'styled-components';\nimport moment from 'moment'; // import Prism from 'prismjs/components/prism-core'\n\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport prismTheme from 'prism-react-renderer/themes/dracula';\nvar Article = styled.article.withConfig({\n  displayName: \"slug__Article\",\n  componentId: \"sc-1e354jq-0\"\n})([\"margin-top:1.5em;font-size:1.15em;line-height:1.75em;\"]);\nvar PDesc = styled.p.withConfig({\n  displayName: \"slug__PDesc\",\n  componentId: \"sc-1e354jq-1\"\n})([\"font-size:1.25em;color:\", \";margin:3px 0 0;\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.primaryColor;\n});\nvar PDate = styled(PDesc).withConfig({\n  displayName: \"slug__PDate\",\n  componentId: \"sc-1e354jq-2\"\n})([\"font-size:1.15em;color:\", \";\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.text;\n}); // TODO: fix overflow and add horizontal scroll\n\nvar Pre = styled.pre.withConfig({\n  displayName: \"slug__Pre\",\n  componentId: \"sc-1e354jq-3\"\n})([\"font-family:'Nanum Gothic Coding',monospace;font-size:.9em;overflow:auto;text-align:left;margin:1em 0;padding:0.5em;& .token-line{line-height:1.3em;height:1.3em;}\"]);\nvar LineNo = styled.span.withConfig({\n  displayName: \"slug__LineNo\",\n  componentId: \"sc-1e354jq-4\"\n})([\"display:inline-block;width:2em;user-select:none;opacity:0.3;\"]);\n\nfunction formatParagraphBlock(content, key) {\n  return __jsx(\"p\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }\n  }, content);\n}\n\nfunction prismafyCodeBlock(content) {\n  var _this = this;\n\n  return __jsx(Highlight, _extends({}, defaultProps, {\n    theme: prismTheme,\n    code: content,\n    language: \"js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), function (_ref3) {\n    var className = _ref3.className,\n        style = _ref3.style,\n        tokens = _ref3.tokens,\n        getLineProps = _ref3.getLineProps,\n        getTokenProps = _ref3.getTokenProps;\n    return __jsx(Pre, {\n      className: className,\n      style: style,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, tokens.map(function (line, i) {\n      return __jsx(\"div\", _extends({}, getLineProps({\n        line: line,\n        key: i\n      }), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }), __jsx(LineNo, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, i + 1), line.map(function (token, key) {\n        return __jsx(\"span\", _extends({}, getTokenProps({\n          token: token,\n          key: key\n        }), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 51\n          }\n        }));\n      }));\n    }));\n  });\n}\n\nfunction Post(props) {\n  console.log('propsPost: ', props.body);\n  var postContent = [];\n  props.body.forEach(function (section) {\n    if (section._type === 'block') {\n      postContent.push(formatParagraphBlock(section.children[0].text, section._key));\n    } else if (section._type === 'code') {\n      postContent.push(prismafyCodeBlock(section.code));\n    }\n  }); // console.log('postContent: ', postContent)\n\n  return __jsx(HeaderLayout, {\n    onToggleThemeClick: props.onToggleThemeClick,\n    themeString: props.themeString,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, props.title), __jsx(PDesc, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, props.description), __jsx(PDate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, moment.utc(props._createdAt).format(\"LL\")), __jsx(Article, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, postContent.map(function (content) {\n    return content;\n  }))));\n}\n\nPost.getInitialProps = function _callee(context) {\n  var _context$query$slug, slug, data;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // default the slug so that it doesn't return \"undefined\"\n          // console.log('context: ', context)\n          _context$query$slug = context.query.slug, slug = _context$query$slug === void 0 ? \"\" : _context$query$slug;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(client.fetch(\"\\n        *[_type == \\\"post\\\" && slug.current == $slug][0]\\n    \", {\n            slug: slug\n          }));\n\n        case 3:\n          data = _context.sent;\n          return _context.abrupt(\"return\", data);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/jasonroundtree/projects/blog/web/pages/post/[slug].js"],"names":["client","HeaderLayout","styled","moment","Highlight","defaultProps","prismTheme","Article","article","PDesc","p","theme","primaryColor","PDate","text","Pre","pre","LineNo","span","formatParagraphBlock","content","key","prismafyCodeBlock","className","style","tokens","getLineProps","getTokenProps","map","line","i","token","Post","props","console","log","body","postContent","forEach","section","_type","push","children","_key","code","onToggleThemeClick","themeString","title","description","utc","_createdAt","format","getInitialProps","context","query","slug","fetch","data"],"mappings":"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","sourcesContent":["import client from '../../client'\nimport HeaderLayout from '../../components/HeaderLayout'\nimport styled from 'styled-components'\nimport moment from 'moment'\n// import Prism from 'prismjs/components/prism-core'\nimport Highlight, { defaultProps } from \"prism-react-renderer\"\nimport prismTheme from 'prism-react-renderer/themes/dracula'\n\nconst Article = styled.article`\n    margin-top: 1.5em;\n    font-size: 1.15em;\n    line-height: 1.75em;\n`\nconst PDesc = styled.p`\n    font-size: 1.25em;\n    color: ${({ theme }) => theme.primaryColor};\n    margin: 3px 0 0;\n`\nconst PDate = styled(PDesc)`\n    font-size: 1.15em;\n    color: ${({ theme }) => theme.text};\n`\n// TODO: fix overflow and add horizontal scroll\nconst Pre = styled.pre`\n    /* font-family: 'Courier Prime', monospace;\n    font-family: 'Cutive Mono', monospace; */\n    font-family: 'Nanum Gothic Coding', monospace;\n    font-size: .9em;\n    overflow: auto;\n    text-align: left;\n    margin: 1em 0;\n    padding: 0.5em;\n    & .token-line {\n        line-height: 1.3em;\n        height: 1.3em;\n    }\n    /* box-shadow: 0px 6px 7px -4px; */\n`\nconst LineNo = styled.span`\n    display: inline-block;\n    width: 2em;\n    user-select: none;\n    opacity: 0.3;\n`\n\nfunction formatParagraphBlock(content, key) {\n    return <p key={key}>{content}</p>\n}\n\nfunction prismafyCodeBlock(content) {\n    return (\n        <Highlight {...defaultProps} theme={prismTheme} code={content} language=\"js\">\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <Pre className={className} style={style}>\n                    {tokens.map((line, i) => (\n                    <div {...getLineProps({ line, key: i })}>\n                        <LineNo>{i + 1}</LineNo>\n                        {line.map((token, key) => <span {...getTokenProps({ token, key })} />)}\n                    </div>\n                    ))}\n                </Pre>\n            )}\n        </Highlight>\n    )\n}\n\nfunction Post(props) {\n    console.log('propsPost: ', props.body)\n    const postContent = []\n    props.body.forEach(section => {\n        if (section._type === 'block') {\n            postContent.push(\n                formatParagraphBlock(section.children[0].text, section._key)\n            )\n        } else if (section._type === 'code') {\n            postContent.push(\n                prismafyCodeBlock(section.code)\n            )\n        }\n    })\n\n    // console.log('postContent: ', postContent)\n    return (\n        <HeaderLayout \n            onToggleThemeClick={props.onToggleThemeClick}\n            themeString={props.themeString}\n        >\n            <article>\n                <h2>{props.title}</h2>\n                <PDesc>{props.description}</PDesc>\n                <PDate>{moment.utc(props._createdAt).format(\"LL\")}</PDate>\n                <Article>\n                    {postContent.map(content => content)}\n                </Article>\n            \n            </article>\n        </HeaderLayout>\n    )\n}\n\nPost.getInitialProps = async function(context) {\n    // default the slug so that it doesn't return \"undefined\"\n    // console.log('context: ', context)\n    const { slug = \"\" } = context.query\n    const data = await client.fetch(`\n        *[_type == \"post\" && slug.current == $slug][0]\n    `, { slug })\n    return data\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}