{"ast":null,"code":"var _jsxFileName = \"/Users/jasonroundtree/projects/blog/web/pages/post/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport client from '../../client';\nimport HeaderLayout from '../../components/HeaderLayout';\nimport styled from 'styled-components';\nimport moment from 'moment';\nconst P = styled.p.withConfig({\n  displayName: \"slug__P\",\n  componentId: \"sc-1e354jq-0\"\n})([\"margin-top:1.5em;\"]);\n\nfunction Post(props) {\n  return __jsx(HeaderLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, props.title), __jsx(P, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, moment.utc(props._createdAt).format(\"LL\")), __jsx(P, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, props.description), __jsx(P, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, props.body), __jsx(P, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, props.tags.map(tag => {\n    console.log('xxx', tag.name);\n  }), \"}\")));\n}\n\nPost.getInitialProps = async function (context) {\n  // default the slug so that it doesn't return \"undefined\"\n  // console.log('context: ', context)\n  const {\n    slug = \"\"\n  } = context.query;\n  const data = await client.fetch(`\n        *[_type == \"post\" && slug.current == $slug][0]\n    `, {\n    slug\n  }); // console.log('data: ', data)\n\n  return data;\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/jasonroundtree/projects/blog/web/pages/post/[slug].js"],"names":["client","HeaderLayout","styled","moment","P","p","Post","props","title","utc","_createdAt","format","description","body","tags","map","tag","console","log","name","getInitialProps","context","slug","query","data","fetch"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,CAAC,GAAGF,MAAM,CAACG,CAAV;AAAA;AAAA;AAAA,yBAAP;;AAIA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,SACI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,KAAX,CADJ,EAEI,MAAC,CAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,MAAM,CAACM,GAAP,CAAWF,KAAK,CAACG,UAAjB,EAA6BC,MAA7B,CAAoC,IAApC,CAAJ,CAFJ,EAGI,MAAC,CAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,KAAK,CAACK,WAAV,CAHJ,EAII,MAAC,CAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAK,CAACM,IAAV,CAJJ,EAMI,MAAC,CAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,CAACO,IAAN,CAAWC,GAAX,CAAeC,GAAG,IAAI;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAG,CAACG,IAAvB;AACH,GAFA,CADL,MANJ,CADJ,CADJ;AAiBH;;AAEDb,IAAI,CAACc,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC3C;AACA;AACA,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAgBD,OAAO,CAACE,KAA9B;AACA,QAAMC,IAAI,GAAG,MAAMxB,MAAM,CAACyB,KAAP,CAAc;;KAAd,EAEhB;AAAEH,IAAAA;AAAF,GAFgB,CAAnB,CAJ2C,CAO3C;;AACA,SAAOE,IAAP;AACH,CATD;;AAWA,eAAelB,IAAf","sourcesContent":["import client from '../../client'\nimport HeaderLayout from '../../components/HeaderLayout'\nimport styled from 'styled-components'\nimport moment from 'moment'\n\nconst P = styled.p`\n    margin-top: 1.5em;\n`\n\nfunction Post(props) {\n    return (\n        <HeaderLayout>\n            <article>\n                <h2>{props.title}</h2>\n                <P>{moment.utc(props._createdAt).format(\"LL\")}</P>\n                <P>{props.description}</P>\n                <P>{props.body}</P>\n                \n                <P>\n                    {props.tags.map(tag => {\n                        console.log('xxx', tag.name)\n                    })}\n                }</P>\n                \n            </article>\n        </HeaderLayout>\n    )\n}\n\nPost.getInitialProps = async function(context) {\n    // default the slug so that it doesn't return \"undefined\"\n    // console.log('context: ', context)\n    const { slug = \"\" } = context.query\n    const data = await client.fetch(`\n        *[_type == \"post\" && slug.current == $slug][0]\n    `, { slug })\n    // console.log('data: ', data)\n    return data\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}