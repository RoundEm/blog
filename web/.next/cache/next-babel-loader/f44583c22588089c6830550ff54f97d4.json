{"ast":null,"code":"var _jsxFileName = \"/Users/jasonroundtree/projects/blog/web/components/KeywordTags.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport '../globalStyles.css';\nconst TagBtn = styled.button.withConfig({\n  displayName: \"KeywordTags__TagBtn\",\n  componentId: \"sc-1eepvlk-0\"\n})([\"padding:10px 15px;margin:15px 0 0 15px;color:var(--secondary-color);font-size:1.2em;border:none;background-color:var(--primary-color);font-family:'Lustria',serif;&:hover{cursor:pointer;}\"]);\n\nfunction getTagCountsData() {\n  return Promise.all(tags.map(tag => {\n    return client.fetch(`\n                *[ _id == $tagID ]{\n                    name,\n                    _id,\n                    \"tagCount\": count(\n                        *[ _type == \"post\" && $tagID in tags[]._ref ]\n                    )\n                }[0]\n            `, {\n      tagID: tag._id\n    });\n  }));\n}\n\nfunction KeywordTags(props) {\n  console.log('props: ', props);\n  props.tags.sort((a, b) => {\n    return a.name > b.name ? 1 : -1;\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(TagBtn, {\n    onClick: props.handleTagFilter,\n    id: \"clearFilter\",\n    className: props.filteredTags.length > 0 ? '' : 'selectedTag',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"All Posts\"), props.tags.map(tag => // console.log('tagtag: ', tag)\n  tag.count > 0 && __jsx(TagBtn, {\n    key: tag.name,\n    id: tag._id,\n    onClick: props.handleTagFilter,\n    className: props.filteredTags.includes(tag._id) ? 'selectedTag' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, tag.name, \"\\xA0 (\", tag.tagCount, \")\"))); // return null\n}\n\nexport default KeywordTags;","map":{"version":3,"sources":["/Users/jasonroundtree/projects/blog/web/components/KeywordTags.js"],"names":["useState","useEffect","styled","TagBtn","button","getTagCountsData","Promise","all","tags","map","tag","client","fetch","tagID","_id","KeywordTags","props","console","log","sort","a","b","name","handleTagFilter","filteredTags","length","count","includes","tagCount"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,qBAAP;AAEA,MAAMC,MAAM,GAAGD,MAAM,CAACE,MAAV;AAAA;AAAA;AAAA,kMAAZ;;AAYA,SAASC,gBAAT,GAA4B;AACxB,SAAOC,OAAO,CAACC,GAAR,CACHC,IAAI,CAACC,GAAL,CAASC,GAAG,IAAI;AACZ,WAAOC,MAAM,CAACC,KAAP,CAAc;;;;;;;;aAAd,EAQJ;AAAEC,MAAAA,KAAK,EAAEH,GAAG,CAACI;AAAb,KARI,CAAP;AASH,GAVD,CADG,CAAP;AAaH;;AAED,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACAA,EAAAA,KAAK,CAACR,IAAN,CAAWW,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACtB,WAAQD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAhC;AACH,GAFD;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,OAAO,EAAEN,KAAK,CAACO,eADnB;AAEI,IAAA,EAAE,EAAC,aAFP;AAGI,IAAA,SAAS,EAAEP,KAAK,CAACQ,YAAN,CAAmBC,MAAnB,GAA4B,CAA5B,GACL,EADK,GAEL,aALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAYKT,KAAK,CAACR,IAAN,CAAWC,GAAX,CAAeC,GAAG,IACf;AACAA,EAAAA,GAAG,CAACgB,KAAJ,GAAY,CAAZ,IACI,MAAC,MAAD;AACI,IAAA,GAAG,EAAEhB,GAAG,CAACY,IADb;AAEI,IAAA,EAAE,EAAEZ,GAAG,CAACI,GAFZ;AAGI,IAAA,OAAO,EAAEE,KAAK,CAACO,eAHnB;AAII,IAAA,SAAS,EACLP,KAAK,CAACQ,YAAN,CAAmBG,QAAnB,CAA4BjB,GAAG,CAACI,GAAhC,IACM,aADN,GAEM,EAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUKJ,GAAG,CAACY,IAVT,YAYMZ,GAAG,CAACkB,QAZV,MAHP,CAZL,CADJ,CANwB,CAwCxB;AACH;;AAED,eAAeb,WAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport '../globalStyles.css'\n\nconst TagBtn = styled.button`\n    padding: 10px 15px;\n    margin: 15px 0 0 15px;\n    color: var(--secondary-color);\n    font-size: 1.2em;\n    border: none;\n    background-color: var(--primary-color);\n    font-family: 'Lustria', serif;\n    &:hover {\n        cursor: pointer;\n    }\n`\nfunction getTagCountsData() {\n    return Promise.all(\n        tags.map(tag => {\n            return client.fetch(`\n                *[ _id == $tagID ]{\n                    name,\n                    _id,\n                    \"tagCount\": count(\n                        *[ _type == \"post\" && $tagID in tags[]._ref ]\n                    )\n                }[0]\n            `, { tagID: tag._id })\n        })\n    )\n}\n\nfunction KeywordTags(props) {\n    console.log('props: ', props)\n    props.tags.sort((a, b) => {\n        return (a.name > b.name) ? 1 : -1\n    })\n    \n    return (\n        <div>\n            <TagBtn\n                onClick={props.handleTagFilter}\n                id='clearFilter'\n                className={props.filteredTags.length > 0 \n                    ? ''\n                    : 'selectedTag'\n                }\n            >\n                All Posts\n            </TagBtn>\n\n            {props.tags.map(tag => (\n                // console.log('tagtag: ', tag)\n                tag.count > 0 && (\n                    <TagBtn \n                        key={tag.name}\n                        id={tag._id}\n                        onClick={props.handleTagFilter}\n                        className={\n                            props.filteredTags.includes(tag._id) \n                                ? 'selectedTag'\n                                : ''\n                        }\n                    >   \n                        {tag.name}\n                        &nbsp;\n                        ({tag.tagCount})\n                    </TagBtn>\n                )\n            ))}\n        </div>\n    )\n    // return null\n}\n\nexport default KeywordTags"]},"metadata":{},"sourceType":"module"}