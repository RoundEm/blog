{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/jasonroundtree/projects/blog/web/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport client from '../client';\nimport Link from 'next/link';\nimport { useState } from 'react'; // import useSWR from 'swr'\n\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport HeaderLayout from '../components/HeaderLayout';\nimport KeywordTags from '../components/KeywordTags';\nimport '../globalStyles.css';\nvar ListItem = styled.li.withConfig({\n  displayName: \"pages__ListItem\",\n  componentId: \"nuslkc-0\"\n})([\"margin:15px 0 0 15px;padding:10px 15px;font-size:1.75em;border:1px solid rgb(250,223,147);\"]);\nvar DateP = styled.p.withConfig({\n  displayName: \"pages__DateP\",\n  componentId: \"nuslkc-1\"\n})([\"font-size:.75em;\"]);\n\nfunction Index(_ref) {\n  var _this = this;\n\n  var posts = _ref.posts,\n      tags = _ref.tags;\n  console.log('posts: ', posts);\n  console.log('tags: ', tags);\n\n  var _useState = useState(posts),\n      filteredPosts = _useState[0],\n      setFilteredPosts = _useState[1];\n\n  var _useState2 = useState(),\n      tagCounts = _useState2[0],\n      setTagCounts = _useState2[1];\n\n  var _useState3 = useState([]),\n      filteredKeywords = _useState3[0],\n      setFilteredKeywords = _useState3[1];\n\n  function getTagCounts(tag) {\n    var count;\n    return _regeneratorRuntime.async(function getTagCounts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(client.fetch(\"\\n            *[ _type = \\\"tag\\\" && name = $]\\n        \"));\n\n          case 2:\n            count = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var _iterator = _createForOfIteratorHelper(tags),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var tag = _step.value;\n      getTagCounts(tag);\n    } // async function getFilteredPosts() {\n    //     const posts = await client.fetch(`\n    //     `)\n    //     console.log('posts: ', posts)\n    //     setFilteredPosts(posts)\n    // }\n    // function handleTagFilter(e) {\n    //     const selectedKeyword = e.target.firstChild.data\n    //     // console.log('selectedKeyword: ', selectedKeyword)\n    //     if (!filteredKeywords.includes(selectedKeyword)) {\n    //         setFilteredKeywords([...filteredKeywords, selectedKeyword])\n    //     } else {\n    //         setFilteredKeywords(filteredKeywords.filter(keyword => keyword !== selectedKeyword))\n    //     }\n    //     console.log('filteredKeywords: ', filteredKeywords)\n    //     getFilteredPosts()\n    // }\n\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return __jsx(HeaderLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Tags:\"), __jsx(KeywordTags // tags={tagCountsArray}\n  // handleTagFilter={handleTagFilter}\n  , {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Posts:\"), filteredPosts.map(function (_ref2) {\n    var _id = _ref2._id,\n        _createdAt = _ref2._createdAt,\n        description = _ref2.description,\n        slug = _ref2.slug,\n        title = _ref2.title;\n    return __jsx(ListItem, {\n      key: _id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, __jsx(Link, {\n      href: \"/post/[slug]\",\n      as: \"/post/\".concat(slug.current),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, title)), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, description), __jsx(DateP, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, moment.utc(_createdAt).format(\"LL\")));\n  }));\n}\n\nexport var __N_SSG = true;\nexport default Index;","map":{"version":3,"sources":["/Users/jasonroundtree/projects/blog/web/pages/index.js"],"names":["client","Link","useState","styled","moment","HeaderLayout","KeywordTags","ListItem","li","DateP","p","Index","posts","tags","console","log","filteredPosts","setFilteredPosts","tagCounts","setTagCounts","filteredKeywords","setFilteredKeywords","getTagCounts","tag","fetch","count","map","_id","_createdAt","description","slug","title","current","utc","format"],"mappings":";;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,qBAAP;AAEA,IAAMC,QAAQ,GAAGJ,MAAM,CAACK,EAAV;AAAA;AAAA;AAAA,kGAAd;AAMA,IAAMC,KAAK,GAAGN,MAAM,CAACO,CAAV;AAAA;AAAA;AAAA,wBAAX;;AAIA,SAASC,KAAT,OAAgC;AAAA;;AAAA,MAAfC,KAAe,QAAfA,KAAe;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAvB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;;AAF4B,kBAGgBX,QAAQ,CAACU,KAAD,CAHxB;AAAA,MAGpBI,aAHoB;AAAA,MAGLC,gBAHK;;AAAA,mBAIQf,QAAQ,EAJhB;AAAA,MAIpBgB,SAJoB;AAAA,MAITC,YAJS;;AAAA,mBAKsBjB,QAAQ,CAAC,EAAD,CAL9B;AAAA,MAKpBkB,gBALoB;AAAA,MAKFC,mBALE;;AAO5B,WAAeC,YAAf,CAA4BC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACwBvB,MAAM,CAACwB,KAAP,2DADxB;;AAAA;AACUC,YAAAA,KADV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAP4B,6CAYVZ,IAZU;AAAA;;AAAA;AAY5B,wDAAwB;AAAA,UAAbU,GAAa;AACpBD,MAAAA,YAAY,CAACC,GAAD,CAAZ;AACH,KAd2B,CAmB5B;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AArC4B;AAAA;AAAA;AAAA;AAAA;;AA4C5B,SACI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,MAAC,WAAD,CACI;AACA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,EAQKP,aAAa,CAACU,GAAd,CACG;AAAA,QACIC,GADJ,SACIA,GADJ;AAAA,QAEIC,UAFJ,SAEIA,UAFJ;AAAA,QAGIC,WAHJ,SAGIA,WAHJ;AAAA,QAIIC,IAJJ,SAIIA,IAJJ;AAAA,QAKIC,KALJ,SAKIA,KALJ;AAAA,WAOI,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEJ,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AACI,MAAA,IAAI,EAAC,cADT;AAEI,MAAA,EAAE,kBAAWG,IAAI,CAACE,OAAhB,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,KAAJ,CAJJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,WAAJ,CAPJ,EAQI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKzB,MAAM,CAAC6B,GAAP,CAAWL,UAAX,EAAuBM,MAAvB,CAA8B,IAA9B,CADL,CARJ,CAPJ;AAAA,GADH,CARL,CADJ;AAiCH;;;AAwBD,eAAevB,KAAf","sourcesContent":["import client from '../client'\nimport Link from 'next/link'\nimport { useState } from 'react'\n// import useSWR from 'swr'\nimport styled from 'styled-components'\nimport moment from 'moment'\nimport HeaderLayout from '../components/HeaderLayout'\nimport KeywordTags from '../components/KeywordTags'\nimport '../globalStyles.css'\n\nconst ListItem = styled.li`\n    margin: 15px 0 0 15px;\n    padding: 10px 15px;\n    font-size: 1.75em;\n    border: 1px solid rgb(250, 223, 147);\n`\nconst DateP = styled.p`\n    font-size: .75em;\n`\n\nfunction Index({ posts, tags }) {\n    console.log('posts: ', posts)\n    console.log('tags: ', tags)\n    const [ filteredPosts, setFilteredPosts ] = useState(posts)\n    const [ tagCounts, setTagCounts ] = useState()\n    const [ filteredKeywords, setFilteredKeywords ] = useState([])\n    \n    async function getTagCounts(tag) {\n        const count = await client.fetch(`\n            *[ _type = \"tag\" && name = $]\n        `)\n    }\n    for (const tag of tags) {\n        getTagCounts(tag)\n    }\n    \n    \n\n\n    // async function getFilteredPosts() {\n    //     const posts = await client.fetch(`\n            \n    //     `)\n    //     console.log('posts: ', posts)\n    //     setFilteredPosts(posts)\n    // }\n\n    // function handleTagFilter(e) {\n    //     const selectedKeyword = e.target.firstChild.data\n    //     // console.log('selectedKeyword: ', selectedKeyword)\n    //     if (!filteredKeywords.includes(selectedKeyword)) {\n    //         setFilteredKeywords([...filteredKeywords, selectedKeyword])\n    //     } else {\n    //         setFilteredKeywords(filteredKeywords.filter(keyword => keyword !== selectedKeyword))\n    //     }\n    //     console.log('filteredKeywords: ', filteredKeywords)\n    //     getFilteredPosts()\n    // }\n\n    \n    \n\n    \n\n    return (\n        <HeaderLayout>\n            <h2>Tags:</h2>\n            <KeywordTags \n                // tags={tagCountsArray}\n                // handleTagFilter={handleTagFilter}\n            />\n\n            <h2>Posts:</h2>\n            {filteredPosts.map(\n                ({ \n                    _id, \n                    _createdAt,\n                    description, \n                    slug,\n                    title, \n                }) => (\n                    <ListItem key={_id}>\n                        <Link\n                            href='/post/[slug]'\n                            as={`/post/${slug.current}`}\n                        >\n                            <a>{title}</a>\n                        </Link>\n                        <p>{description}</p>\n                        <DateP>\n                            {moment.utc(_createdAt).format(\"LL\")}\n                        </DateP>\n                    </ListItem>\n                )\n            )}\n        </HeaderLayout>\n    )\n}\n\nexport async function getStaticProps() {\n    const posts = await client.fetch(`\n        *[ _type == \"post\" ]{\n            ..., \n            tags[]->{_id, name}\n        }\n    `)\n\n    const tags = await client.fetch(`\n        *[ _type == \"tag\" ]{\n            _id, name\n        }\n    `)\n\n    return { \n        props: { \n            posts,\n            tags\n        } \n    }\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}