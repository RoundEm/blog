{"ast":null,"code":"var _jsxFileName = \"/Users/jasonroundtree/projects/blog/web/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useState, useEffect } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { GlobalStyles } from '../components/GlobalStyles';\nimport colorScheme from '../colorScheme';\nconst darkTheme = {\n  body: `${colorScheme.darkThemeColorBg}`,\n  text: `${colorScheme.darkThemeColorText}`,\n  primaryColor: `${colorScheme.primaryColor}`,\n  primaryColorDarker: `${colorScheme.primaryColorDarker}`,\n  secondaryColor: `${colorScheme.secondaryColor}`,\n  tertiaryColor: `${colorScheme.tertiaryColor}`\n};\nconst lightTheme = {\n  body: `${colorScheme.darkThemeColorBg}`,\n  text: `${colorScheme.darkThemeColorText}`,\n  primaryColor: `${colorScheme.primaryColor}`,\n  primaryColorDarker: `${colorScheme.primaryColorDarker}`,\n  secondaryColor: `${colorScheme.secondaryColor}`,\n  tertiaryColor: `${colorScheme.tertiaryColor}`\n};\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: userTheme,\n    1: setUserTheme\n  } = useState('lightMode');\n  return __jsx(ThemeProvider, {\n    theme: darkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/jasonroundtree/projects/blog/web/pages/_app.js"],"names":["useState","useEffect","styled","ThemeProvider","GlobalStyles","colorScheme","darkTheme","body","darkThemeColorBg","text","darkThemeColorText","primaryColor","primaryColorDarker","secondaryColor","tertiaryColor","lightTheme","MyApp","Component","pageProps","userTheme","setUserTheme"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAG,GAAEF,WAAW,CAACG,gBAAiB,EADxB;AAEdC,EAAAA,IAAI,EAAG,GAAEJ,WAAW,CAACK,kBAAmB,EAF1B;AAGdC,EAAAA,YAAY,EAAG,GAAEN,WAAW,CAACM,YAAa,EAH5B;AAIdC,EAAAA,kBAAkB,EAAG,GAAEP,WAAW,CAACO,kBAAmB,EAJxC;AAKdC,EAAAA,cAAc,EAAG,GAAER,WAAW,CAACQ,cAAe,EALhC;AAMdC,EAAAA,aAAa,EAAG,GAAET,WAAW,CAACS,aAAc;AAN9B,CAAlB;AASA,MAAMC,UAAU,GAAG;AACfR,EAAAA,IAAI,EAAG,GAAEF,WAAW,CAACG,gBAAiB,EADvB;AAEfC,EAAAA,IAAI,EAAG,GAAEJ,WAAW,CAACK,kBAAmB,EAFzB;AAGfC,EAAAA,YAAY,EAAG,GAAEN,WAAW,CAACM,YAAa,EAH3B;AAIfC,EAAAA,kBAAkB,EAAG,GAAEP,WAAW,CAACO,kBAAmB,EAJvC;AAKfC,EAAAA,cAAc,EAAG,GAAER,WAAW,CAACQ,cAAe,EAL/B;AAMfC,EAAAA,aAAa,EAAG,GAAET,WAAW,CAACS,aAAc;AAN7B,CAAnB;;AASA,SAASE,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACrC,QAAM;AAAA,OAAEC,SAAF;AAAA,OAAaC;AAAb,MAA8BpB,QAAQ,CAAC,WAAD,CAA5C;AAEA,SACI,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEM,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,SAAD,eAAeY,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,CADJ;AAMH;;AAED,eAAeF,KAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { GlobalStyles } from '../components/GlobalStyles'\nimport colorScheme from '../colorScheme'\n\nconst darkTheme = {\n    body: `${colorScheme.darkThemeColorBg}`,\n    text: `${colorScheme.darkThemeColorText}`,\n    primaryColor: `${colorScheme.primaryColor}`,\n    primaryColorDarker: `${colorScheme.primaryColorDarker}`,\n    secondaryColor: `${colorScheme.secondaryColor}`,\n    tertiaryColor: `${colorScheme.tertiaryColor}`,\n}\n\nconst lightTheme = {\n    body: `${colorScheme.darkThemeColorBg}`,\n    text: `${colorScheme.darkThemeColorText}`,\n    primaryColor: `${colorScheme.primaryColor}`,\n    primaryColorDarker: `${colorScheme.primaryColorDarker}`,\n    secondaryColor: `${colorScheme.secondaryColor}`,\n    tertiaryColor: `${colorScheme.tertiaryColor}`,\n}\n\nfunction MyApp({ Component, pageProps }) {\n    const [ userTheme, setUserTheme ] = useState('lightMode')\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <GlobalStyles />\n            <Component {...pageProps} />\n        </ThemeProvider>\n    )\n}\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}