{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport client from '../client';\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport HeaderLayout from '../components/HeaderLayout';\nimport KeywordTags from '../components/KeywordTags';\nimport sortObjProperties from '../utils/sortObjProperties.js';\nvar ListItem = styled.li.withConfig({\n  displayName: \"pages__ListItem\",\n  componentId: \"nuslkc-0\"\n})([\"margin:15px 0 0 15px;padding:10px 15px;font-size:1.75em;border:1px solid var(--primary-darker);\"]);\nvar ListItemLink = styled.a.withConfig({\n  displayName: \"pages__ListItemLink\",\n  componentId: \"nuslkc-1\"\n})([\"font-family:'Fjalla One',sans-serif;font-weight:400;&:hover{cursor:pointer;color:\", \";}\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.primaryColor;\n});\nvar TagListItem = styled.li.withConfig({\n  displayName: \"pages__TagListItem\",\n  componentId: \"nuslkc-2\"\n})([\"display:inline-block;margin-right:5px;padding:3px 5px;font-family:'Nanum Gothic Coding',monospace;font-size:.5em;color:\", \";background:\", \";\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.secondaryColor;\n}, function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.primaryColor;\n});\nvar DescP = styled.p.withConfig({\n  displayName: \"pages__DescP\",\n  componentId: \"nuslkc-3\"\n})([\"font-size:.6em;color:\", \";\"], function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.primaryColor;\n});\nvar DateP = styled.p.withConfig({\n  displayName: \"pages__DateP\",\n  componentId: \"nuslkc-4\"\n})([\"font-size:.5em;\"]); // removes duplicate post objects by converting each post into a JSON string so that they can be compared and filtered using `new Set`, then parsing the final unique array of posts back to a normal array of objects\n\nfunction uniquePostsArray(posts) {\n  return _toConsumableArray(new Set(posts.map(function (postObj) {\n    return JSON.stringify(postObj);\n  }))).map(function (postStr) {\n    return JSON.parse(postStr);\n  });\n}\n\nfunction getTagCountsData(tags) {\n  return Promise.all(tags.map(function _callee(tag) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(client.fetch(\"\\n                *[ _id == $tagID ]{\\n                    name,\\n                    _id,\\n                    \\\"count\\\": count(\\n                        *[ \\n                            _type == \\\"post\\\" && \\n                            $tagID in tags[]._ref \\n                        ]\\n                    )\\n                }[0]\\n            \", {\n              tagID: tag._id\n            }));\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }));\n}\n\nfunction Index(_ref5) {\n  var posts = _ref5.posts,\n      tags = _ref5.tags,\n      themeString = _ref5.themeString,\n      onToggleThemeClick = _ref5.onToggleThemeClick;\n  console.log('posts: ', posts); // console.log('tags: ', tags)\n\n  var _useState = useState(posts),\n      allPosts = _useState[0];\n\n  var _useState2 = useState([]),\n      filteredPosts = _useState2[0],\n      setFilteredPosts = _useState2[1];\n\n  var _useState3 = useState([]),\n      tagCounts = _useState3[0],\n      setTagCounts = _useState3[1];\n\n  var _useState4 = useState([]),\n      filteredTags = _useState4[0],\n      setFilteredTags = _useState4[1]; // console.log('tagCounts: ', tagCounts)\n\n\n  useEffect(function () {\n    getTagCountsData(tags).then(function (tagCounts) {\n      setTagCounts(tagCounts);\n    })[\"catch\"](function (err) {\n      return console.log('error getting tag counts: ', err);\n    });\n  }, []);\n  useEffect(function () {\n    if (filteredTags.length > 0) {\n      var _filteredPosts = [];\n      allPosts.forEach(function (post) {\n        post.tags.forEach(function (tag) {\n          if (filteredTags.includes(tag._id)) {\n            _filteredPosts.push(post);\n          }\n        });\n      });\n      setFilteredPosts(uniquePostsArray(_filteredPosts));\n    } else {\n      setFilteredPosts([]);\n    }\n  }, [filteredTags]);\n\n  function handleTagFilter(e) {\n    var selectedTagID = e.currentTarget.id;\n\n    if (selectedTagID === 'clearFilter') {\n      setFilteredTags([]);\n    } else if (!filteredTags.includes(selectedTagID)) {\n      setFilteredTags(function (state) {\n        return [].concat(_toConsumableArray(state), [selectedTagID]);\n      });\n    } else {\n      setFilteredTags(filteredTags.filter(function (tag) {\n        return tag !== selectedTagID;\n      }));\n    }\n  }\n\n  var postsToRender = filteredPosts.length > 0 ? filteredPosts : allPosts;\n  return (// TODO: is there a better way to render HeaderLayout instead of using in here and in [slug] (and any other separate pages that I add? Checkout next.js _document)\n    __jsx(HeaderLayout, {\n      onToggleThemeClick: onToggleThemeClick,\n      themeString: themeString\n    }, __jsx(\"h2\", null, \"Filter by Tags:\"), __jsx(KeywordTags, {\n      tags: tagCounts,\n      handleTagFilter: handleTagFilter,\n      filteredTags: filteredTags\n    }), __jsx(\"h2\", null, \"Posts:\"), postsToRender.map(function (_ref6) {\n      var _id = _ref6._id,\n          _createdAt = _ref6._createdAt,\n          manual_pub_date = _ref6.manual_pub_date,\n          description = _ref6.description,\n          slug = _ref6.slug,\n          title = _ref6.title,\n          tags = _ref6.tags;\n      return __jsx(ListItem, {\n        key: _id\n      }, __jsx(Link, {\n        href: \"/posts/[slug]\",\n        as: \"/posts/\".concat(slug.current)\n      }, __jsx(ListItemLink, null, title)), __jsx(DescP, null, description), __jsx(DateP, null, manual_pub_date ? moment.utc(manual_pub_date).format(\"LL\") : moment.utc(_createdAt).format(\"LL\")), __jsx(\"ul\", null, sortObjProperties(tags).map(function (tag) {\n        return __jsx(TagListItem, {\n          key: tag._id\n        }, tag.name);\n      })));\n    }))\n  );\n}\n\nexport var __N_SSG = true;\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}