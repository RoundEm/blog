{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/jasonroundtree/projects/blog/web/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { GlobalStyles } from '../components/GlobalStyles'; // import { dark, light } from '../colorScheme'\n\nimport modes from '../colorScheme';\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState('light'),\n      userThemeStr = _useState[0],\n      setUserThemeStr = _useState[1];\n\n  var _useState2 = useState(modes[userThemeStr]),\n      userThemeObj = _useState2[0],\n      setUserThemeObj = _useState2[1]; // console.log('userThemeStr: ', userThemeStr)\n  // console.log('userThemeObj: ', userThemeObj)\n\n\n  useEffect(function () {\n    setUserThemeObj(modes[userThemeStr]);\n  }, [userThemeStr]);\n\n  function handleThemeToggle() {\n    setUserThemeStr(userThemeStr === 'dark' ? 'light' : 'dark');\n  }\n\n  return __jsx(ThemeProvider, {\n    theme: userThemeObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    onToggleThemeClick: handleThemeToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/jasonroundtree/projects/blog/web/pages/_app.js"],"names":["useState","useEffect","styled","ThemeProvider","GlobalStyles","modes","MyApp","Component","pageProps","userThemeStr","setUserThemeStr","userThemeObj","setUserThemeObj","handleThemeToggle"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,SAASC,YAAT,QAA6B,4BAA7B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,SAASC,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBACKR,QAAQ,CAAC,OAAD,CADb;AAAA,MAC7BS,YAD6B;AAAA,MACfC,eADe;;AAAA,mBAEKV,QAAQ,CAACK,KAAK,CAACI,YAAD,CAAN,CAFb;AAAA,MAE7BE,YAF6B;AAAA,MAEfC,eAFe,kBAGrC;AACA;;;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACZW,IAAAA,eAAe,CAACP,KAAK,CAACI,YAAD,CAAN,CAAf;AACH,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;;AAIA,WAASI,iBAAT,GAA6B;AACzBH,IAAAA,eAAe,CACXD,YAAY,KAAK,MAAjB,GACM,OADN,GAEM,MAHK,CAAf;AAKH;;AAED,SACI,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEE,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,SAAD,eACQH,SADR;AAEI,IAAA,kBAAkB,EAAEK,iBAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,CADJ;AASH;;AAED,eAAeP,KAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { GlobalStyles } from '../components/GlobalStyles'\n// import { dark, light } from '../colorScheme'\nimport modes from '../colorScheme'\n\nfunction MyApp({ Component, pageProps }) {\n    const [ userThemeStr, setUserThemeStr ] = useState('light')\n    const [ userThemeObj, setUserThemeObj ] = useState(modes[userThemeStr])\n    // console.log('userThemeStr: ', userThemeStr)\n    // console.log('userThemeObj: ', userThemeObj)\n\n    useEffect(() => {\n        setUserThemeObj(modes[userThemeStr])\n    }, [userThemeStr])\n    \n    function handleThemeToggle() {\n        setUserThemeStr(\n            userThemeStr === 'dark'\n                ? 'light'\n                : 'dark'\n        )\n    }\n\n    return (\n        <ThemeProvider theme={userThemeObj}>\n            <GlobalStyles />\n            <Component \n                {...pageProps} \n                onToggleThemeClick={handleThemeToggle}\n            />\n        </ThemeProvider>\n    )\n}\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}