{"ast":null,"code":"var _jsxFileName = \"/Users/jasonroundtree/projects/blog/web/components/KeywordTags.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport client from '../client';\nimport styled from 'styled-components';\nimport '../globalStyles.css';\nvar TagBtn = styled.button.withConfig({\n  displayName: \"KeywordTags__TagBtn\",\n  componentId: \"sc-1eepvlk-0\"\n})([\"padding:10px 15px;margin:15px 0 0 15px;color:var(--secondary-color);font-size:1.2em;border:none;background-color:var(--primary-color);font-family:'Lustria',serif;&:hover{cursor:pointer;}\"]);\n\nfunction KeywordTags(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      tagCounts = _useState[0],\n      setTagCounts = _useState[1];\n\n  console.log('props: ', props);\n  useEffect(function () {\n    var tc = getTagCountsData(props.tags);\n    setTagCounts(tc); // tags.forEach(async tag => {\n    //     const count = await client.fetch(`\n    //         count(*[ _type == \"post\" && $tagID in tags[]._ref ])\n    //     `, { tagID: tag._id })\n    //     // this check is in case i've added a tag in sanity studio but haven't assigned it to a post yet:\n    //     if (count > 0) {\n    //         const tagCount = {\n    //             _id: tag._id,\n    //             name: tag.name,\n    //             count\n    //         }\n    //         // TODO: what's a good way to set these all these at once??\n    //         setTagCounts(state => [...state, tagCount])\n    //     }\n    // })\n  }, []); // tagCounts.sort((a, b) => {\n  //     return (a.name > b.name) ? 1 : -1\n  // })\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(TagBtn, {\n    onClick: props.handleTagFilter,\n    id: \"clearFilter\",\n    className: props.filteredTags.length > 0 ? '' : 'selectedTag',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"All Posts\"), tagCounts.map(function (tag) {\n    return (// console.log('tagtag: ', tag)\n      tag.count > 0 && __jsx(TagBtn, {\n        key: tag.name,\n        id: tag._id,\n        onClick: props.handleTagFilter,\n        className: props.filteredTags.includes(tag._id) ? 'selectedTag' : '',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, tag.name, \"\\xA0 (\", tag.tagCount, \")\")\n    );\n  })); // return null\n}\n\nexport default KeywordTags;","map":{"version":3,"sources":["/Users/jasonroundtree/projects/blog/web/components/KeywordTags.js"],"names":["useState","useEffect","client","styled","TagBtn","button","KeywordTags","props","tagCounts","setTagCounts","console","log","tc","getTagCountsData","tags","handleTagFilter","filteredTags","length","map","tag","count","name","_id","includes","tagCount"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,qBAAP;AAEA,IAAMC,MAAM,GAAGD,MAAM,CAACE,MAAV;AAAA;AAAA;AAAA,kMAAZ;;AAcA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAAA,kBACYP,QAAQ,CAAC,EAAD,CADpB;AAAA,MAChBQ,SADgB;AAAA,MACLC,YADK;;AAExBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,KAAvB;AAEAN,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMW,EAAE,GAAGC,gBAAgB,CAACN,KAAK,CAACO,IAAP,CAA3B;AACAL,IAAAA,YAAY,CAACG,EAAD,CAAZ,CAFY,CAGZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAlBQ,EAkBN,EAlBM,CAAT,CAJwB,CAwBxB;AACA;AACA;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,OAAO,EAAEL,KAAK,CAACQ,eADnB;AAEI,IAAA,EAAE,EAAC,aAFP;AAGI,IAAA,SAAS,EAAER,KAAK,CAACS,YAAN,CAAmBC,MAAnB,GAA4B,CAA5B,GACL,EADK,GAEL,aALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAYKT,SAAS,CAACU,GAAV,CAAc,UAAAC,GAAG;AAAA,WACd;AACAA,MAAAA,GAAG,CAACC,KAAJ,GAAY,CAAZ,IACI,MAAC,MAAD;AACI,QAAA,GAAG,EAAED,GAAG,CAACE,IADb;AAEI,QAAA,EAAE,EAAEF,GAAG,CAACG,GAFZ;AAGI,QAAA,OAAO,EAAEf,KAAK,CAACQ,eAHnB;AAII,QAAA,SAAS,EACLR,KAAK,CAACS,YAAN,CAAmBO,QAAnB,CAA4BJ,GAAG,CAACG,GAAhC,IACM,aADN,GAEM,EAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUKH,GAAG,CAACE,IAVT,YAYMF,GAAG,CAACK,QAZV;AAHU;AAAA,GAAjB,CAZL,CADJ,CA5BwB,CA8DxB;AACH;;AAED,eAAelB,WAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport client from '../client'\nimport styled from 'styled-components'\nimport '../globalStyles.css'\n\nconst TagBtn = styled.button`\n    padding: 10px 15px;\n    margin: 15px 0 0 15px;\n    color: var(--secondary-color);\n    font-size: 1.2em;\n    border: none;\n    background-color: var(--primary-color);\n    font-family: 'Lustria', serif;\n    &:hover {\n        cursor: pointer;\n    }\n`\n\n\nfunction KeywordTags(props) {\n    const [ tagCounts, setTagCounts ] = useState([])\n    console.log('props: ', props)\n\n    useEffect(() => {\n        const tc = getTagCountsData(props.tags)\n        setTagCounts(tc)  \n        // tags.forEach(async tag => {\n        //     const count = await client.fetch(`\n        //         count(*[ _type == \"post\" && $tagID in tags[]._ref ])\n        //     `, { tagID: tag._id })\n        //     // this check is in case i've added a tag in sanity studio but haven't assigned it to a post yet:\n        //     if (count > 0) {\n        //         const tagCount = {\n        //             _id: tag._id,\n        //             name: tag.name,\n        //             count\n        //         }\n        //         // TODO: what's a good way to set these all these at once??\n        //         setTagCounts(state => [...state, tagCount])\n        //     }\n        // })\n    }, [])\n\n    // tagCounts.sort((a, b) => {\n    //     return (a.name > b.name) ? 1 : -1\n    // })\n    \n    return (\n        <div>\n            <TagBtn\n                onClick={props.handleTagFilter}\n                id='clearFilter'\n                className={props.filteredTags.length > 0 \n                    ? ''\n                    : 'selectedTag'\n                }\n            >\n                All Posts\n            </TagBtn>\n\n            {tagCounts.map(tag => (\n                // console.log('tagtag: ', tag)\n                tag.count > 0 && (\n                    <TagBtn \n                        key={tag.name}\n                        id={tag._id}\n                        onClick={props.handleTagFilter}\n                        className={\n                            props.filteredTags.includes(tag._id) \n                                ? 'selectedTag'\n                                : ''\n                        }\n                    >   \n                        {tag.name}\n                        &nbsp;\n                        ({tag.tagCount})\n                    </TagBtn>\n                )\n            ))}\n        </div>\n    )\n    // return null\n}\n\nexport default KeywordTags"]},"metadata":{},"sourceType":"module"}