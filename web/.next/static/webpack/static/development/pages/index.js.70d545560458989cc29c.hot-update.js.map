{"version":3,"file":"static/webpack/static/development/pages/index.js.70d545560458989cc29c.hot-update.js","sources":["webpack:///./components/HeaderLayout.js","webpack:///./components/KeywordTags.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./pages/index.js"],"sourcesContent":["import Head from 'next/head'\nimport Link from 'next/link'\nimport styled from 'styled-components'\n\nconst Header = styled.header`\n    padding: 1em 1.5em;\n    background: rgb(250, 223, 147);\n`\nconst Span = styled.span`\n    margin-left: 20px;\n`\n\nfunction HeaderLayout(props) {\n    return (\n        <>\n            <Head>\n                <title>Blog - Jason Roundtree</title>\n                <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n                <link href=\"https://fonts.googleapis.com/css?family=Archivo+Narrow:400,500,600,700&display=swap\" rel=\"stylesheet\"></link>\n                {/* <link href=\"https://fonts.googleapis.com/css?family=Viga&display=swap\" rel=\"stylesheet\"></link> */}\n                <link href=\"https://fonts.googleapis.com/css?family=Lustria&display=swap\" rel=\"stylesheet\"></link>\n            </Head>\n\n            <Header>\n                <nav>\n                    <h1>\n                        <Link href='/'>\n                            <a>Goober's Trundle</a>\n                        </Link>\n                    </h1>\n                    <Span>a web dev blog, by </Span><a href='http://jasonroundtree.info/' target=\"_blank\">jason roundtree</a>\n                </nav>\n            </Header>\n\n            <main>{props.children}</main>\n        </>\n    )\n}\n\nexport default HeaderLayout","import styled from 'styled-components'\n\nconst TagBtn = styled.button`\n    padding: 10px 15px;\n    margin: 15px 0 0 15px;\n    color: rgb(250, 223, 147);\n    font-size: 1.2em;\n    border: none;\n    background-color: rgb(3, 152, 252);\n    font-family: 'Lustria', serif;\n    &:hover {\n        cursor: pointer;\n    }\n`\nconst Span = styled.span`\n    margin: 0 5px;\n    color: rgb(250, 223, 147);\n`\n\nfunction KeywordTags(props) {\n    // console.log('props: ', props)\n    const tagCountsArray = []\n    for (const [ tag, count ] of Object.entries(props.tags)) {\n        tagCountsArray.push({\n            'name': tag,\n            'count': count\n        })\n    }\n    \n    tagCountsArray.sort((a, b) => {\n        return (a.name > b.name) ? 1 : -1\n    })\n\n    return (\n        \n        <div>\n            {tagCountsArray.map(tag => (\n                <TagBtn \n                    key={tag.name}\n                    onClick={props.handleClickFilter}\n                >   \n                    {tag.name}\n                    <Span>({tag.count})</Span>\n                </TagBtn>\n            ))}\n        </div>\n    )\n}\n\nexport default KeywordTags","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","import client from '../client'\nimport Link from 'next/link'\nimport { useState } from 'react'\nimport styled from 'styled-components'\nimport moment from 'moment'\nimport HeaderLayout from '../components/HeaderLayout'\nimport KeywordTags from '../components/KeywordTags'\nimport '../globalStyles.css'\n\nconst ListItem = styled.li`\n    margin: 15px 0 0 15px;\n    padding: 10px 15px;\n    font-size: 1.75em;\n    border: 1px solid rgb(250, 223, 147);\n`\nconst DateP = styled.p`\n    font-size: .75em;\n`\n\nfunction Index({ posts }) {\n    function handleClickFilter(e) {\n        console.log('e: ', e.target.firstChild)\n    }\n    // TODO: there's gotta be a more straightforward way to get these counts, right? Maybe just do it from query?\n    const tags = posts.reduce((tagCount, post) => {\n        // TODO: is this check necessary or will there always be tags even when empty array?\n        post.tags && post.tags.forEach(tag => {\n            if (!tagCount[tag.name]) {\n                tagCount[tag.name] = 1\n            } else {\n                tagCount[tag.name] = tagCount[tag.name] + 1\n            }\n        })\n        return tagCount\n    }, {})\n\n    return (\n        <HeaderLayout>\n            <h2>Tags:</h2>\n            <KeywordTags \n                tags={tags}\n                handleClickFilter={handleClickFilter}\n            />\n\n            <h2>Posts:</h2>\n            {posts.map(\n                ({ \n                    _id, \n                    _createdAt,\n                    description, \n                    slug,\n                    title, \n                }) => (\n                    <ListItem key={_id}>\n                        <Link\n                            href='/post/[slug]'\n                            as={`/post/${slug.current}`}\n                        >\n                            <a>{title}</a>\n                        </Link>\n                        <p>{description}</p>\n                        <DateP>\n                            {moment.utc(_createdAt).format(\"LL\")}\n                        </DateP>\n                    </ListItem>\n                )\n            )}\n        </HeaderLayout>\n    )\n}\n\nexport async function getStaticProps() {\n    const posts = await client.fetch(`\n        *[ _type == \"post\" ]{\n            ..., \n            tags[]->{_id, name}\n        }\n    `)\n\n    return { props: { posts } }\n}\n\nexport default Index"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACvCA;AAEA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAWA;AACA;AACA;;;;;;;;;;;;ACjDA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5BA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfA;AAuBA;AACA;;AAYA;;;;A","sourceRoot":""}