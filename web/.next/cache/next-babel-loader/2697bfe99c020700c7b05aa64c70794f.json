{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport client from '../client';\nimport Link from 'next/link';\nimport HeaderLayout from '../components/HeaderLayout';\nimport KeywordTags from '../components/KeywordTags';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport '../globalStyles.css';\nvar ListItem = styled.li.withConfig({\n  displayName: \"pages__ListItem\",\n  componentId: \"nuslkc-0\"\n})([\"margin:1em 0;font-size:1.75em;\"]);\nvar DateP = styled.p.withConfig({\n  displayName: \"pages__DateP\",\n  componentId: \"nuslkc-1\"\n})([\"font-size:.85em;\"]);\n\nvar Index = function Index(props) {\n  console.log('props: ', props);\n  var propsArray = Object.values(props); // last item in props is next.js metadata\n\n  var posts = propsArray.slice(0, propsArray.length - 1); // console.log('posts: ', posts)\n\n  return null; // return (\n  //     <HeaderLayout>\n  //         <h2>Tags:</h2>\n  //         <KeywordTags />\n  //         <h2>Posts:</h2>\n  //         {posts.map(\n  //             ({ \n  //                 _id, \n  //                 _createdAt,\n  //                 slug, \n  //                 title, \n  //                 description, \n  //             }) => (\n  //                 <ListItem key={_id}>\n  //                     <Link\n  //                         href='/post/[slug]'\n  //                         as={`/post/${slug.current}`}\n  //                     >\n  //                         <a>{title}</a>\n  //                     </Link>\n  //                     <p>{description}</p>\n  //                     <DateP>\n  //                         {moment.utc(_createdAt).format(\"LL\")}\n  //                     </DateP>\n  //                 </ListItem>\n  //             )\n  //         )}\n  //     </HeaderLayout>\n  // )\n};\n\nIndex.getInitialProps = function _callee() {\n  var posts, tags, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(client.fetch(\"\\n        *[_type == \\\"post\\\"]\\n    \"));\n\n        case 2:\n          posts = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(client.fetch(\"\\n        *[_type == \\\"tag\\\"]\\n    \"));\n\n        case 5:\n          tags = _context.sent;\n          data = [].concat(_toConsumableArray(posts), _toConsumableArray(tags)); // console.log('posts: ', posts)\n          // console.log('tags: ', tags)\n\n          return _context.abrupt(\"return\", data);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/jasonroundtree/projects/blog/web/pages/index.js"],"names":["client","Link","HeaderLayout","KeywordTags","styled","moment","ListItem","li","DateP","p","Index","props","console","log","propsArray","Object","values","posts","slice","length","getInitialProps","fetch","tags","data"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,qBAAP;AAEA,IAAMC,QAAQ,GAAGF,MAAM,CAACG,EAAV;AAAA;AAAA;AAAA,sCAAd;AAIA,IAAMC,KAAK,GAAGJ,MAAM,CAACK,CAAV;AAAA;AAAA;AAAA,wBAAX;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACA,MAAMG,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcL,KAAd,CAAnB,CAFqB,CAGrB;;AACA,MAAMM,KAAK,GAAGH,UAAU,CAACI,KAAX,CACV,CADU,EACPJ,UAAU,CAACK,MAAX,GAAoB,CADb,CAAd,CAJqB,CAOrB;;AACA,SAAO,IAAP,CARqB,CASrB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAvCD;;AAyCAT,KAAK,CAACU,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACApB,MAAM,CAACqB,KAAP,wCADA;;AAAA;AACdJ,UAAAA,KADc;AAAA;AAAA,2CAKDjB,MAAM,CAACqB,KAAP,uCALC;;AAAA;AAKdC,UAAAA,IALc;AASdC,UAAAA,IATc,gCASHN,KATG,sBASOK,IATP,IAUpB;AACA;;AAXoB,2CAYbC,IAZa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAeA,eAAeb,KAAf","sourcesContent":["import client from '../client'\nimport Link from 'next/link'\nimport HeaderLayout from '../components/HeaderLayout'\nimport KeywordTags from '../components/KeywordTags'\nimport styled from 'styled-components'\nimport moment from 'moment'\nimport '../globalStyles.css'\n\nconst ListItem = styled.li`\n    margin: 1em 0;\n    font-size: 1.75em;\n`\nconst DateP = styled.p`\n    font-size: .85em;\n`\n\nconst Index = (props) => {\n    console.log('props: ', props)\n    const propsArray = Object.values(props)\n    // last item in props is next.js metadata\n    const posts = propsArray.slice(\n        0, propsArray.length - 1\n    )\n    // console.log('posts: ', posts)\n    return null\n    // return (\n    //     <HeaderLayout>\n    //         <h2>Tags:</h2>\n    //         <KeywordTags />\n\n    //         <h2>Posts:</h2>\n    //         {posts.map(\n    //             ({ \n    //                 _id, \n    //                 _createdAt,\n    //                 slug, \n    //                 title, \n    //                 description, \n    //             }) => (\n    //                 <ListItem key={_id}>\n    //                     <Link\n    //                         href='/post/[slug]'\n    //                         as={`/post/${slug.current}`}\n    //                     >\n    //                         <a>{title}</a>\n    //                     </Link>\n    //                     <p>{description}</p>\n    //                     <DateP>\n    //                         {moment.utc(_createdAt).format(\"LL\")}\n    //                     </DateP>\n    //                 </ListItem>\n    //             )\n    //         )}\n    //     </HeaderLayout>\n    // )\n}\n\nIndex.getInitialProps = async function() {\n    const posts = await client.fetch(`\n        *[_type == \"post\"]\n    `)\n    \n    const tags = await client.fetch(`\n        *[_type == \"tag\"]\n    `)\n\n    const data = [...posts, ...tags]\n    // console.log('posts: ', posts)\n    // console.log('tags: ', tags)\n    return data\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}